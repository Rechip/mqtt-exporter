// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.217.2/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": ".",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": {},
	
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"twxs.cmake",
		"ms-vscode.cmake-tools",
		"xaver.clang-format",
		"jeff-hykin.better-cpp-syntax",
		"ms-vscode.cpptools",
		"ms-vscode.cpptools-extension-pack",
		"ms-azuretools.vscode-docker",
		"ms-vscode.cpptools-themes",
		"vscode-icons-team.vscode-icons",
		"GitHub.copilot",
		"oderwat.indent-rainbow"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [ 8388 ],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
	"mounts": [
		"source=/home/zeeno/.bashrc,target=/home/vscode/.bashrc,type=bind",
		"source=/home/zeeno/.conan/data,target=/home/vscode/.conan/data,type=bind"
	],

	// This will change UID and GID to the local user = no mount issues
	 "remoteUser": "vscode"
}
